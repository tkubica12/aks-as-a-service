name: Create landing zone for demo
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: demo
    permissions:
      id-token: write
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: ./landing_zone
      run: terraform init -backend-config=client_id=${{ secrets.AZURE_CLIENT_ID }} -backend-config=tenant_id=${{ secrets.AZURE_TENANT_ID }}

    - name: Get token for self-hosted runner registration
      uses: octokit/request-action@v2.x
      id: get_runner_token
      with:
        route: POST /repos/tkubica12/aks-as-a-service/actions/runners/registration-token
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Parse token
      uses: sergeysova/jq-action@v2
      id: parse_runner_token
      with:
        cmd: echo '${{ steps.get_runner_token.outputs.data }}' | jq .token -r
    
    - name: Deploy landing zone
      working-directory: ./landing_zone
      run: terraform apply -auto-approve -var "github_runner_token=${{ steps.parse_runner_token.outputs.value }}"

    - name: Store runner client ID as repo variable
      uses: octokit/request-action@v2.x
      id: store_runner_client_id
      with:
        route: GET /repos/tkubica12/aks-as-a-service/actions/variables
        # body: '{"name": "runner_client_id", "value": "something"}'
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}