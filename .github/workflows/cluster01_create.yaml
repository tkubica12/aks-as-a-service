name: Create cluster01
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    environment: demo
    permissions:
      id-token: write
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Install Azure cli
      run: |
        sudo apt-get install -y ca-certificates curl apt-transport-https lsb-release gnupg
        curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
        AZ_REPO=$(lsb_release -cs)
        echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
        sudo apt-get update
        sudo apt-get install -y azure-cli

    - name: Azure Login
      run: az login --identity

    - name: Install dependencies
      run: sudo apt-get install -y unzip

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: ./clusters/cluster01
      run: terraform init -upgrade 

    - name: Terraform Apply
      working-directory: ./clusters/cluster01
      run: |
        retries=0
        max_retries=1
        until terraform apply -auto-approve || [ $retries -eq max_retries ]; do
          echo "Terraform apply failed, retrying in 5 seconds..."
          sleep 5
          retries=$((retries+1))
        done

    - name: Bootstrap ArgoCD
      working-directory: ./charts/argocd_bootstrap
      run: |
        az aks command invoke -n cluster01 -g cluster01 -f . -c \
          "kubectl create namespace argocd; 
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/master/manifests/install.yaml; 
          helm upgrade -i argocd-bootstrap . --set repo_token=$REPO_TOKEN --set cluster_name=cluster01"