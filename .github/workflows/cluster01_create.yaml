name: Create cluster01
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    environment: demo
    permissions:
      id-token: write
      contents: write
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Install Azure cli
      run: |
        sudo apt-get install -y ca-certificates curl apt-transport-https lsb-release gnupg
        curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
        AZ_REPO=$(lsb_release -cs)
        echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
        sudo apt-get update
        sudo apt-get install -y azure-cli

    - name: Azure Login
      run: az login --identity

    - name: Install dependencies
      run: sudo apt-get install -y unzip

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: ./clusters/cluster01
      run: terraform init -upgrade 

    - name: Terraform Apply
      working-directory: ./clusters/cluster01
      run: terraform apply -auto-approve

    - name: Commit and push runtime.yaml
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add ./clusters/cluster01/runtime.yaml
        git commit --allow-empty -m "Autogenerated runtime.yaml"
        git push origin HEAD:${{ github.ref }}

    # - name: Commit and push runtime.yaml
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: Autogenerated runtime.yaml
    #     file_pattern: ./clusters/cluster01/runtime.yaml
    #     skip_checkout: true
    #     skip_fetch: true
    #     branch: main

    - name: Get cluster name
      id: get_cluster_name
      uses: mikefarah/yq@master
      with:
        cmd: yq '.cluster_name' ./clusters/cluster01/manifest.yaml

    - name: Get cluster RG name
      id: get_cluster_rg_name
      uses: mikefarah/yq@master
      with:
        cmd: yq '.resource_group_name' ./clusters/cluster01/manifest.yaml

    - name: Bootstrap ArgoCD
      working-directory: ./charts/argocd_bootstrap
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      run: |
        az aks command invoke -n ${{ steps.get_cluster_name.outputs.result }} \
          -g ${{ steps.get_cluster_rg_name.outputs.result }}  \
          -f . -c \
          "kubectl create namespace argocd; 
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/master/manifests/install.yaml; 
          helm upgrade -i argocd-bootstrap . --set repo_token=$REPO_TOKEN --set cluster_name=${{ steps.get_cluster_name.outputs.result }}"
